const bcryptjs = require("bcryptjs");
const User = require("../model/Users");

exports.getData = async (req,res) => {
    try {
        const users = await User.findAll()
        if(!users) return res.status(404).json({ success: false, message: 'users not found' })

        return res.status(200).json({ success: true, message: 'users list', users })

    } catch (error) {
        
    }
}

exports.addData = async (req,res) => {
    let { name, email, address, mobile, password } = req.body

    if(!name && !email && !address && !mobile && !password) {
        return res.status(404).json({ success: false, message: '[name, email, address, mobile, password] fields are required' })
    }

    try {
        // email check
        const checkEmail = await User.findOne({email:email})
        if(checkEmail) return res.status(404).json({ success: false, message: 'user already exists!' }) 

        // password encryption
        var salt = bcryptjs.genSaltSync(10);
        req.body.password = bcryptjs.hashSync(password, salt);

        const users = await User.create(req.body)
        if(users){
            return res.status(200).json({ success: true, message: 'user added!' })
        }else{
            return res.status(404).json({ success: false, message: 'user not added!' })
        }
    } catch (error) {
        console.log(error)
        return res.status(404).json({ success: false, message: 'something went wrong' })
    }
}